{"ast":null,"code":"var _jsxFileName = \"/home/vale/devel/fullstackopen/fullstackopen-exercises/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    text,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 37\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [text, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 42\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = props => {\n  /// ...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: () => console.log('hey')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: () => console.log('hey')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: () => console.log('hey')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/vale/devel/fullstackopen/fullstackopen-exercises/part1/unicafe/src/App.js"],"names":["useState","Button","text","onClick","StatisticLine","value","Statistics","props","App","good","setGood","neutral","setNeutral","bad","setBad","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD;AAAA,sBAAqB;AAAQ,IAAA,OAAO,EAAEA,OAAjB;AAAA,cAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,UAArB;AAAA,CAAf;;KAAMD,M;;AAEN,MAAMG,aAAa,GAAG;AAAA,MAAC;AAACF,IAAAA,IAAD;AAAOG,IAAAA;AAAP,GAAD;AAAA,sBAAmB;AAAA,4BAAI;AAAA,iBAAKH,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,eAAoB;AAAA,gBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnB;AAAA,CAAtB;;MAAMD,a;;AAEN,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA,sBACE;AAAA,2BACE;AAAA,8BACA,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAA8B,QAAA,KAAK,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,KAApB;AAA0B,QAAA,KAAK,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAXD;;MAAMD,U;;AAYN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,MAAMe,OAAO,CAACC,GAAR,CAAY,KAAZ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,KAAZ;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAmB,MAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,KAAZ;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBD;;GAAMR,G;;MAAAA,G;AAkBN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\n\nconst Button = ({text, onClick}) => <button onClick={onClick}>{text}</button> \n\nconst StatisticLine = ({text, value}) => <tr><td>{text}:</td><td>{value}</td></tr>\n\nconst Statistics = (props) => {\n  /// ...\n  return(\n    <div>\n      <table>\n      <StatisticLine text=\"good\" value=\"1\" />\n      <StatisticLine text=\"neutral\" value =\"2\" />\n      <StatisticLine text=\"bad\" value =\"3\" />\n      </table>\n    </div>\n  )\n}\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button text=\"good\" onClick={() => console.log('hey') } />\n      <Button text=\"neutral\" onClick={() => console.log('hey') } />\n      <Button text=\"bad\" onClick={() => console.log('hey') } />\n      <h1>statistics</h1>\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}