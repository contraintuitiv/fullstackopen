{"ast":null,"code":"var _jsxFileName = \"/home/vale/devel/fullstackopen/exercise1_6/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    text,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 37\n  }, this);\n};\n\n_c = Button;\n\nconst Statistic = _ref2 => {\n  let {\n    gut,\n    schlecht,\n    neutral\n  } = _ref2;\n  const gesamtZahl = gut + schlecht + neutral;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Durchschnitt: \", (gut * 1 + schlecht * -1) / gesamtZahl, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 57\n    }, this), \"Positiv-Quote: \", gut / gesamtZahl]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst App = () => {\n  _s();\n\n  const [gut, setGut] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [schlecht, setSchlecht] = useState(0);\n\n  const setGutHandler = () => setGut(gut + 1);\n\n  const setNeutralHandler = () => setNeutral(neutral + 1);\n\n  const setSchlechtHandler = () => setSchlecht(schlecht + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: \"gut\",\n        onClick: setGutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"neutral\",\n        onClick: setNeutralHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"schlecht\",\n        onClick: setSchlechtHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"gut: \", gut]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"neutral: \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"schlecht: \", schlecht]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          gut: gut,\n          neutral: neutral,\n          schlecht: schlecht\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VxKMy2Glid3eqEC+Lsh1qAVUmDo=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/vale/devel/fullstackopen/exercise1_6/src/App.js"],"names":["useState","Button","text","onClick","Statistic","gut","schlecht","neutral","gesamtZahl","App","setGut","setNeutral","setSchlecht","setGutHandler","setNeutralHandler","setSchlechtHandler"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD;AAAA,sBAAqB;AAAQ,IAAA,OAAO,EAAEA,OAAjB;AAAA,cAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,UAArB;AAAA,CAAf;;KAAMD,M;;AAEN,MAAMG,SAAS,GAAG,SAA8B;AAAA,MAA7B;AAACC,IAAAA,GAAD;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,GAA6B;AAC9C,QAAMC,UAAU,GAAGH,GAAG,GAACC,QAAJ,GAAaC,OAAhC;AACA,sBACE;AAAA,iCACmB,CAACF,GAAG,GAAC,CAAJ,GAAQC,QAAQ,GAAC,CAAC,CAAnB,IAAsBE,UADzC,eACoD;AAAA;AAAA;AAAA;AAAA,YADpD,qBAEoBH,GAAG,GAACG,UAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATD;;MAAMJ,S;;AAWN,MAAMK,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACJ,GAAD,EAAMK,MAAN,IAAgBV,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACO,OAAD,EAAUI,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWM,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMa,aAAa,GAAG,MAAMH,MAAM,CAACL,GAAG,GAAC,CAAL,CAAlC;;AACA,QAAMS,iBAAiB,GAAG,MAAMH,UAAU,CAACJ,OAAO,GAAC,CAAT,CAA1C;;AACA,QAAMQ,kBAAkB,GAAG,MAAMH,WAAW,CAACN,QAAQ,GAAC,CAAV,CAA5C;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,KAAb;AAAmB,QAAA,OAAO,EAAEO;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAwB,QAAA,OAAO,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,8BACE;AAAA,4BAAUV,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAcE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,iCAAeD,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAED,GAAhB;AAAqB,UAAA,OAAO,EAAEE,OAA9B;AAAuC,UAAA,QAAQ,EAAED;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BD;;GAAMG,G;;MAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Button = ({text, onClick}) => <button onClick={onClick}>{text}</button>\n\nconst Statistic = ({gut, schlecht, neutral}) => {\n  const gesamtZahl = gut+schlecht+neutral\n  return(\n    <div>\n        Durchschnitt: {(gut*1 + schlecht*-1)/gesamtZahl}<br />\n        Positiv-Quote: {gut/gesamtZahl}\n    </div>\n  )\n\n}\n\nconst App = () => {\n  const [gut, setGut] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [schlecht, setSchlecht] = useState(0)\n\n  const setGutHandler = () => setGut(gut+1)\n  const setNeutralHandler = () => setNeutral(neutral+1)\n  const setSchlechtHandler = () => setSchlecht(schlecht+1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <div>\n        <Button text='gut' onClick={setGutHandler} />\n        <Button text='neutral' onClick={setNeutralHandler} />\n        <Button text='schlecht' onClick={setSchlechtHandler} />\n      </div>\n      <div>\n        <h3>gut: {gut}</h3>\n        <h3>neutral: {neutral}</h3>\n        <h3>schlecht: {schlecht}</h3>\n        <p>\n          <Statistic gut={gut} neutral={neutral} schlecht={schlecht} />\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}